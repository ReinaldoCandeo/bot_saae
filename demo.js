#!/usr/bin/env node

/**
 * Script de Demonstra√ß√£o do SAAE WhatsApp Bot
 * Inicia o sistema em modo demo sem necessidade de credenciais reais
 */

const fs = require('fs');
const path = require('path');

console.log('üé≠ SAAE WhatsApp Bot - Modo Demonstra√ß√£o\n');

// Configurar vari√°veis de ambiente para demo
process.env.NODE_ENV = 'demo';
process.env.PORT = '3000';
process.env.HOST = 'localhost';
process.env.DB_PATH = './database/saae_bot_demo.db';
process.env.WEBHOOK_URL = 'http://localhost:3000';
process.env.ADMIN_PANEL_URL = 'http://localhost:3000/admin';
process.env.SAAE_NAME = 'SAAE de Palmital';
process.env.SAAE_PHONE = '+5518999999999';
process.env.SAAE_EMAIL = 'contato@saae-palmital.com.br';
process.env.SAAE_ADDRESS = 'Rua Principal, 123 - Centro - Palmital/SP';
process.env.BUSINESS_HOURS_START = '08:00';
process.env.BUSINESS_HOURS_END = '17:00';
process.env.BUSINESS_DAYS = '1,2,3,4,5';

// Configura√ß√µes de demo para WhatsApp (n√£o funcionais, apenas para demo)
process.env.WHATSAPP_ACCESS_TOKEN = 'demo_token_for_testing';
process.env.WHATSAPP_PHONE_NUMBER_ID = 'demo_phone_id';
process.env.WHATSAPP_WEBHOOK_VERIFY_TOKEN = 'demo_verify_token_123';
process.env.WHATSAPP_BUSINESS_ACCOUNT_ID = 'demo_business_account';

console.log('üîç Verificando sistema...');

// Verificar Node.js
const nodeVersion = process.version;
const majorVersion = parseInt(nodeVersion.split('.')[0].substring(1));

if (majorVersion < 16) {
  console.log(`‚ùå Node.js vers√£o ${nodeVersion} n√£o suportada!`);
  console.log('üì¶ Requer Node.js 16 ou superior');
  process.exit(1);
}

// Verificar depend√™ncias
if (!fs.existsSync('node_modules')) {
  console.log('‚ùå Depend√™ncias n√£o instaladas!');
  console.log('üì¶ Execute: npm install\n');
  process.exit(1);
}

// Criar diret√≥rio do banco se n√£o existir
const dbDir = path.dirname(process.env.DB_PATH);
if (!fs.existsSync(dbDir)) {
  fs.mkdirSync(dbDir, { recursive: true });
  console.log(`üìÅ Diret√≥rio do banco criado: ${dbDir}`);
}

// Informa√ß√µes do sistema
console.log('‚úÖ Sistema verificado com sucesso!\n');

console.log('üìä Informa√ß√µes da Demonstra√ß√£o:');
console.log(`   Node.js: ${nodeVersion}`);
console.log(`   Ambiente: ${process.env.NODE_ENV}`);
console.log(`   Porta: ${process.env.PORT}`);
console.log(`   Banco: ${process.env.DB_PATH}`);
console.log(`   Webhook: ${process.env.WEBHOOK_URL}/webhook`);
console.log(`   Admin Panel: http://localhost:${process.env.PORT}/admin\n`);

console.log('üé≠ MODO DEMONSTRA√á√ÉO ATIVADO');
console.log('   ‚ö†Ô∏è  WhatsApp API n√£o funcionar√° (credenciais de demo)');
console.log('   ‚úÖ Painel administrativo funcionar√° normalmente');
console.log('   ‚úÖ Banco de dados funcionar√° normalmente');
console.log('   ‚úÖ Todas as funcionalidades internas ativas\n');

// Iniciar servidor
console.log('üöÄ Iniciando servidor de demonstra√ß√£o...\n');

try {
  // Importar e iniciar servidor
  require('./server.js');
} catch (error) {
  console.error('‚ùå Erro ao iniciar servidor:', error.message);
  console.log('\nüîß Verifique os logs acima para mais detalhes');
  process.exit(1);
}

// Tratamento de sinais para shutdown graceful
process.on('SIGINT', () => {
  console.log('\nüõë Recebido SIGINT, encerrando demonstra√ß√£o...');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\nüõë Recebido SIGTERM, encerrando demonstra√ß√£o...');
  process.exit(0);
});

// Tratamento de erros n√£o capturados
process.on('uncaughtException', (error) => {
  console.error('\n‚ùå Erro n√£o capturado:', error);
  process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('\n‚ùå Promise rejeitada:', reason);
  process.exit(1);
});
